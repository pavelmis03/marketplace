image: python:3.7

cache:
  paths:
    - ~/.cache/pip/

before_script:
  - python -V
  - apt-get update
  - apt-get install ssh-client

stages:
  - test
  - style
  - docs
  - deploy


test:
  stage: test
  before_script:
  - pip install -r requirements.txt
  script:
  - coverage run manage.py test
  - coverage report --omit=manage.py
  - coverage html --omit=manage.py
  - mkdir public
  - mv htmlcov public/coverage
  artifacts:
    paths:
      - public/coverage


pep8:
  stage: style
  before_script:
  - pip install -r ci/pycodestyle_requirements.txt
  script:
  - ./ci/pycodestyle_runner.sh
  artifacts:
    paths:
      - public/pycodestyle.txt


pylint:
  stage: style
  before_script:
  - pip install -r ci/pylint_requirements.txt
  script:
  - ./ci/pylint_runner.sh
  artifacts:
    paths:
      - public/pylint.svg
      - public/pylint.html


sphinx:
  stage: docs
  before_script:
  - pip install -r ci/sphinx_requirements.txt
  script:
  - cd docs
  - export PYTHONPATH=..
  - make html
  - cd ..
  - mv docs/build/html public/docs
  artifacts:
    paths:
      - public/docs


upload_to_server:
  stage: deploy
  before_script:
    - apt-get install -qq git
    - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh $SSH_USER@$SSH_HOST "cd prodserver_conf/ms104_market && git checkout master && git pull origin master && exit"
    - ssh $SSH_USER@$SSH_HOST "cd prodserver_conf && docker stop ms104_market && docker rm ms104_market && docker-compose build ms104_market && docker-compose up -d ms104_market && exit"
  only:
    - master
